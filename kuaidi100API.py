# coding: utf-8from requests import *from json import loadsimport timeimport refrom pypinyin import lazy_pinyin as pinyincomCodeDict = {"顺丰": "shunfeng",               "申通": "shentong",               "圆通": "yuantong",               "易邮": "eupackage"}def interfaceDetect(Num):    url = 'http://www.kuaidi100.com/autonumber/autoComNum'    params = {"text": Num}    res = get(url, params)    comCode = loads(res.content.decode("utf-8"))['auto']    if comCode:        return [i["comCode"] for i in comCode]    else:        return Nonedef infoQuerySmart(Num, com=""):    if not com:        comCodeList = interfaceDetect(Num)    elif com in comCodeDict.keys():        comCodeList = [comCodeDict[com]]    else:        comCodeList = [pinyin(com)]    res = []    if not comCodeList:        return ["没有查询到相关信息"]    for i in comCodeList[0:min(len(comCodeList), 10)]:        result = infoQuery(Num, i)        if not isinstance(result, str):            res.append(result)    return res[0:min(len(res), 3)]def infoQuery(Num, comCode):    timeStamp = time.time()    url = "http://www.kuaidi100.com/query"    params = {"type": comCode,              "postid": Num,              "id": 1,              "valicode": "",              "temp": timeStamp              }    res = get(url, params)    msg = loads(res.content.decode("utf-8"))    if msg["message"] == "ok":        return msg['data']    else:        return msg['message']def queryPrint(data):    res = ""    for i in data:        if not isinstance(i, str):            for j in reversed(i[0:3]):                res += (j["time"] + "\n" + j["context"] + "\n")            res += "\n\n"    if not res:        return "没有查询到相关数据"    return resdef queryLogistic(info):    # data = info.split(":", 1)    data = re.split('\s|:|：', info, 1)    if len(data) == 1:        return queryPrint(infoQuerySmart(data))    else:        return queryPrint(infoQuerySmart(data[0], data[1]))def unitTest():    Num = 'GJ171107004885:易邮'    # comCode = interfaceDetect(Num)    # print(comCode)    # print(queryPrint([infoQuery(Num, comCode[0])]))    print(queryLogistic(Num))    # print(queryPrint(infoQuerySmart(Num, "易邮")))def unitTest2():    Num = '1'    print(queryPrint(infoQuerySmart(Num)))    print(queryPrint(infoQuerySmart(Num, "易邮")))if __name__ == "__main__":    unitTest()